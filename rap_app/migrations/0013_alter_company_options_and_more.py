# Generated by Django 4.2.7 on 2025-03-22 13:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('rap_app', '0012_typeoffre_couleur'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='company',
            options={'ordering': ['-created_at'], 'verbose_name': 'entreprise', 'verbose_name_plural': 'entreprises'},
        ),
        migrations.AlterModelOptions(
            name='historiqueformation',
            options={'ordering': ['-date_modification'], 'verbose_name': 'Historique de modification de formation', 'verbose_name_plural': 'Historique des modifications de formations'},
        ),
        migrations.AlterModelOptions(
            name='historiqueprospection',
            options={'ordering': ['-date_modification'], 'verbose_name': 'Historique de prospection', 'verbose_name_plural': 'Historiques de prospection'},
        ),
        migrations.RemoveField(
            model_name='historiqueformation',
            name='utilisateur',
        ),
        migrations.AddField(
            model_name='document',
            name='mime_type',
            field=models.CharField(blank=True, help_text='Type MIME détecté automatiquement', max_length=100, null=True, verbose_name='Type MIME'),
        ),
        migrations.AddField(
            model_name='evenement',
            name='lieu',
            field=models.CharField(blank=True, help_text="Emplacement où se déroule l'événement", max_length=255, null=True, verbose_name='Lieu'),
        ),
        migrations.AddField(
            model_name='evenement',
            name='participants_prevus',
            field=models.PositiveIntegerField(blank=True, help_text='Nombre de participants attendus', null=True, verbose_name='Participants prévus'),
        ),
        migrations.AddField(
            model_name='evenement',
            name='participants_reels',
            field=models.PositiveIntegerField(blank=True, help_text="Nombre de participants réels (à remplir après l'événement)", null=True, verbose_name='Participants réels'),
        ),
        migrations.AddField(
            model_name='partenaire',
            name='slug',
            field=models.SlugField(blank=True, help_text='Identifiant unique pour les URLs (généré automatiquement)', max_length=255, null=True, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='centre',
            name='code_postal',
            field=models.CharField(blank=True, help_text='Code postal à 5 chiffres du centre', max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='Le code postal doit contenir exactement 5 chiffres', regex='^\\d{5}$')], verbose_name='Code postal'),
        ),
        migrations.AlterField(
            model_name='centre',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='centre',
            name='nom',
            field=models.CharField(help_text='Nom complet du centre de formation (doit être unique)', max_length=255, unique=True, verbose_name='Nom du centre'),
        ),
        migrations.AlterField(
            model_name='centre',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='commentaire',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='commentaire',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='company',
            name='action_description',
            field=models.CharField(blank=True, help_text="Détails sur l'action ou l'opportunité", max_length=5000, null=True, verbose_name="Description de l'action"),
        ),
        migrations.AlterField(
            model_name='company',
            name='actions',
            field=models.CharField(blank=True, choices=[('recrutement_emploi', 'Recrutement - Emploi'), ('recrutement_stage', 'Recrutement - Stage'), ('recrutement_apprentissage', 'Recrutement - Apprentissage'), ('presentation_metier_entreprise', 'Présentation de métier(s)/entreprise'), ('visite_entreprise', "Visite de l'entreprise"), ('coaching', 'Coaching'), ('autre', 'Autre'), ('partenariat', 'Partenariat'), ('non_definie', 'Non définie')], help_text="Type d'interaction possible avec cette entreprise", max_length=50, null=True, verbose_name='Actions'),
        ),
        migrations.AlterField(
            model_name='company',
            name='city',
            field=models.CharField(blank=True, help_text='Ville du siège social', max_length=100, null=True, verbose_name='Ville'),
        ),
        migrations.AlterField(
            model_name='company',
            name='contact_email',
            field=models.EmailField(blank=True, help_text='Email professionnel du contact', max_length=254, null=True, verbose_name='Adresse email du contact'),
        ),
        migrations.AlterField(
            model_name='company',
            name='contact_job',
            field=models.CharField(blank=True, help_text='Fonction ou poste du contact', max_length=255, null=True, verbose_name='Métier du contact'),
        ),
        migrations.AlterField(
            model_name='company',
            name='contact_name',
            field=models.CharField(blank=True, help_text='Nom et prénom du contact principal', max_length=255, null=True, verbose_name='Nom du contact'),
        ),
        migrations.AlterField(
            model_name='company',
            name='contact_phone_number',
            field=models.CharField(blank=True, help_text='Format: 06XXXXXXXX ou +33XXXXXXXXX', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Entrez un numéro de téléphone français valide commençant par 01, 02, ..., 06 ou 07.', regex='^(0[1-9]\\d{8})$|^(?:\\+33|0033)[1-9]\\d{8}$')], verbose_name='Numéro de téléphone du contact'),
        ),
        migrations.AlterField(
            model_name='company',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par'),
        ),
        migrations.AlterField(
            model_name='company',
            name='name',
            field=models.CharField(blank=True, help_text="Nom de l'entreprise", max_length=100, null=True, verbose_name='Nom'),
        ),
        migrations.AlterField(
            model_name='company',
            name='sector_name',
            field=models.CharField(blank=True, help_text="Domaine d'activité principal de l'entreprise", max_length=200, null=True, verbose_name="Secteur d'activité"),
        ),
        migrations.AlterField(
            model_name='company',
            name='social_network_url',
            field=models.CharField(blank=True, help_text="Lien vers le profil de l'entreprise sur un réseau social", max_length=200, null=True, verbose_name='URL du réseau social'),
        ),
        migrations.AlterField(
            model_name='company',
            name='street_name',
            field=models.CharField(blank=True, help_text='Exemple: 123 rue de la République', max_length=200, null=True, verbose_name='Numéro et nom de la rue'),
        ),
        migrations.AlterField(
            model_name='company',
            name='website',
            field=models.URLField(blank=True, help_text="Site web de l'entreprise (avec http:// ou https://)", null=True, validators=[django.core.validators.RegexValidator(message="L'URL doit commencer par http:// ou https://", regex='^(http|https)://')]),
        ),
        migrations.AlterField(
            model_name='company',
            name='zip_code',
            field=models.CharField(blank=True, help_text='Code postal à 5 chiffres', max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='Le code postal doit être composé de 5 chiffres.', regex='^[0-9]{5}$')], verbose_name='Code postal'),
        ),
        migrations.AlterField(
            model_name='document',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='document',
            name='fichier',
            field=models.FileField(help_text='Fichier à télécharger (types acceptés selon la catégorie)', upload_to='formations/documents/', verbose_name='Fichier'),
        ),
        migrations.AlterField(
            model_name='document',
            name='nom_fichier',
            field=models.CharField(db_index=True, help_text="Nom du fichier tel qu'il apparaîtra dans l'interface", max_length=255, verbose_name='Nom du fichier'),
        ),
        migrations.AlterField(
            model_name='document',
            name='source',
            field=models.TextField(blank=True, help_text='Source ou origine du document (optionnel)', null=True, verbose_name='Source du document'),
        ),
        migrations.AlterField(
            model_name='document',
            name='taille_fichier',
            field=models.PositiveIntegerField(blank=True, help_text='Taille du fichier en Ko (calculée automatiquement)', null=True, verbose_name='Taille du fichier (Ko)'),
        ),
        migrations.AlterField(
            model_name='document',
            name='type_document',
            field=models.CharField(choices=[('pdf', 'PDF'), ('image', 'Image'), ('contrat', 'Contrat signé'), ('autre', 'Autre')], default='autre', help_text='Catégorie du document déterminant les types de fichiers acceptés', max_length=20, verbose_name='Type de document'),
        ),
        migrations.AlterField(
            model_name='document',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='document',
            name='utilisateur',
            field=models.ForeignKey(help_text='Utilisateur ayant téléchargé le document', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Téléchargé par'),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='description_autre',
            field=models.CharField(blank=True, help_text="Précision obligatoire si le type d'événement est 'Autre'", max_length=255, null=True, verbose_name="Description pour 'Autre' événement"),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='details',
            field=models.TextField(blank=True, help_text="Informations complémentaires sur l'événement", null=True, verbose_name="Détails de l'événement"),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='event_date',
            field=models.DateField(blank=True, help_text="Date prévue pour l'événement", null=True, verbose_name="Date de l'événement"),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='formation',
            field=models.ForeignKey(blank=True, help_text='Formation à laquelle cet événement est rattaché', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evenements', to='rap_app.formation', verbose_name='Formation associée'),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='type_evenement',
            field=models.CharField(choices=[('info_collective_presentiel', 'Information collective présentiel'), ('info_collective_distanciel', 'Information collective distanciel'), ('job_dating', 'Job dating'), ('evenement_emploi', 'Événement emploi'), ('forum', 'Forum'), ('jpo', 'Journée Portes Ouvertes (JPO)'), ('autre', 'Autre')], db_index=True, help_text="Catégorie de l'événement", max_length=100, verbose_name="Type d'événement"),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='assistante',
            field=models.CharField(blank=True, help_text="Nom de l'assistante en charge de la formation", max_length=255, null=True, verbose_name='Assistante'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='cap',
            field=models.PositiveIntegerField(blank=True, help_text="Capacité maximale d'accueil (tous financements confondus)", null=True, verbose_name='Capacité maximale'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='centre',
            field=models.ForeignKey(help_text='Centre où se déroule la formation', on_delete=django.db.models.deletion.CASCADE, related_name='formations', to='rap_app.centre', verbose_name='Centre de formation'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='convocation_envoie',
            field=models.BooleanField(default=False, help_text='Indique si les convocations ont été envoyées aux participants', verbose_name='Convocation envoyée'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='dernier_commentaire',
            field=models.TextField(blank=True, help_text='Dernier commentaire ajouté à cette formation', null=True, verbose_name='Dernier commentaire'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='end_date',
            field=models.DateField(blank=True, help_text='Date prévue de fin de la formation', null=True, verbose_name='Date de fin'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='entresformation',
            field=models.PositiveIntegerField(default=0, help_text='Nombre de personnes ayant effectivement débuté la formation', verbose_name='Entrées en formation'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='inscrits_crif',
            field=models.PositiveIntegerField(default=0, help_text="Nombre d'inscrits sur les places CRIF", verbose_name='Inscrits CRIF'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='inscrits_mp',
            field=models.PositiveIntegerField(default=0, help_text="Nombre d'inscrits sur les places MP", verbose_name='Inscrits MP'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='nom',
            field=models.CharField(help_text='Titre ou nom officiel de la formation', max_length=255, verbose_name='Nom de la formation'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='nombre_candidats',
            field=models.PositiveIntegerField(default=0, help_text='Nombre total de candidats pour cette formation', verbose_name='Nombre de candidats'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='nombre_entretiens',
            field=models.PositiveIntegerField(default=0, help_text="Nombre d'entretiens réalisés avec les candidats", verbose_name="Nombre d'entretiens"),
        ),
        migrations.AlterField(
            model_name='formation',
            name='nombre_evenements',
            field=models.PositiveIntegerField(default=0, help_text="Nombre d'événements liés à cette formation", verbose_name="Nombre d'événements"),
        ),
        migrations.AlterField(
            model_name='formation',
            name='num_kairos',
            field=models.CharField(blank=True, help_text='Identifiant de la formation dans Kairos', max_length=50, null=True, verbose_name='Numéro Kairos'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='num_offre',
            field=models.CharField(blank=True, help_text="Identifiant unique de l'offre de formation", max_length=50, null=True, verbose_name="Numéro de l'offre"),
        ),
        migrations.AlterField(
            model_name='formation',
            name='num_produit',
            field=models.CharField(blank=True, help_text='Référence du produit de formation', max_length=50, null=True, verbose_name='Numéro du produit'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='partenaires',
            field=models.ManyToManyField(blank=True, help_text='Partenaires associés à cette formation', related_name='formations', to='rap_app.partenaire', verbose_name='Partenaires'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='prevus_crif',
            field=models.PositiveIntegerField(default=0, help_text='Nombre de places financées par la région', verbose_name='Places prévues CRIF'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='prevus_mp',
            field=models.PositiveIntegerField(default=0, help_text='Nombre de places en marché public', verbose_name='Places prévues MP'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='start_date',
            field=models.DateField(blank=True, help_text='Date de démarrage de la formation', null=True, verbose_name='Date de début'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='statut',
            field=models.ForeignKey(help_text='État actuel de la formation', on_delete=django.db.models.deletion.CASCADE, related_name='formations', to='rap_app.statut', verbose_name='Statut de la formation'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='type_offre',
            field=models.ForeignKey(help_text="Catégorie ou type de l'offre de formation", on_delete=django.db.models.deletion.CASCADE, related_name='formations', to='rap_app.typeoffre', verbose_name="Type d'offre"),
        ),
        migrations.AlterField(
            model_name='formation',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='utilisateur',
            field=models.ForeignKey(blank=True, help_text='Utilisateur ayant créé cette formation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='formations_creees', to=settings.AUTH_USER_MODEL, verbose_name='Créé par'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='action',
            field=models.CharField(default='modification', help_text="Type d'action effectuée (création, modification, etc.)", max_length=100, verbose_name="Type d'action"),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='ancienne_valeur',
            field=models.TextField(blank=True, help_text='Valeur du champ avant modification', null=True, verbose_name='Ancienne valeur'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='champ_modifie',
            field=models.CharField(default='non_specifié', help_text='Nom du champ qui a été modifié', max_length=100, verbose_name='Champ modifié'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='commentaire',
            field=models.TextField(blank=True, help_text='Commentaire explicatif sur la modification', null=True, verbose_name='Commentaire lié à la modification'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='date_modification',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Date et heure de la modification', verbose_name='Date de modification'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='details',
            field=models.JSONField(blank=True, default=dict, help_text='Informations supplémentaires sur la modification au format JSON', verbose_name='Détails'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='formation',
            field=models.ForeignKey(help_text='Formation concernée par cette modification', on_delete=django.db.models.deletion.CASCADE, related_name='historiques', to='rap_app.formation', verbose_name='Formation'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='modifie_par',
            field=models.ForeignKey(help_text='Utilisateur qui a effectué la modification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historiques_formation', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='nouvelle_valeur',
            field=models.TextField(blank=True, help_text='Valeur du champ après modification', null=True, verbose_name='Nouvelle valeur'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='ancien_statut',
            field=models.CharField(choices=[('a_faire', 'À faire'), ('en_cours', 'En cours'), ('a_relancer', 'À relancer'), ('acceptee', 'Acceptée'), ('refusee', 'Refusée'), ('annulee', 'Annulée'), ('non_renseigne', 'Non renseigné')], help_text='Statut avant la modification', max_length=20, verbose_name='Ancien statut'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='commentaire',
            field=models.TextField(blank=True, help_text='Commentaire associé à cette modification', null=True, verbose_name='Commentaire'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='date_modification',
            field=models.DateTimeField(auto_now_add=True, help_text='Date à laquelle cette modification a été enregistrée', verbose_name='Date de modification'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='modifie_par',
            field=models.ForeignKey(help_text='Utilisateur ayant effectué cette modification', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Modifié par'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='moyen_contact',
            field=models.CharField(blank=True, choices=[('email', 'Email'), ('telephone', 'Téléphone'), ('visite', 'Visite'), ('reseaux', 'Réseaux sociaux')], help_text='Moyen utilisé pour ce contact', max_length=50, null=True, verbose_name='Moyen de contact'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='nouveau_statut',
            field=models.CharField(choices=[('a_faire', 'À faire'), ('en_cours', 'En cours'), ('a_relancer', 'À relancer'), ('acceptee', 'Acceptée'), ('refusee', 'Refusée'), ('annulee', 'Annulée'), ('non_renseigne', 'Non renseigné')], help_text='Nouveau statut après la modification', max_length=20, verbose_name='Nouveau statut'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='prochain_contact',
            field=models.DateField(blank=True, help_text='Date à laquelle un suivi devrait être effectué', null=True, verbose_name='Date de relance'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='prospection',
            field=models.ForeignKey(help_text='Prospection concernée par cet historique', on_delete=django.db.models.deletion.CASCADE, related_name='historiques', to='rap_app.prospection', verbose_name='Prospection'),
        ),
        migrations.AlterField(
            model_name='historiqueprospection',
            name='resultat',
            field=models.TextField(blank=True, help_text='Information sur le résultat de cette étape de prospection', null=True, verbose_name='Résultat ou retour de la prospection'),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='contact_email',
            field=models.EmailField(blank=True, help_text='Adresse email professionnelle du contact', max_length=254, null=True, verbose_name='Email du contact'),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='contact_nom',
            field=models.CharField(blank=True, help_text='Nom de la personne à contacter chez le partenaire', max_length=255, null=True, verbose_name='Nom du contact'),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='contact_poste',
            field=models.CharField(blank=True, help_text="Fonction occupée par le contact au sein de l'organisation", max_length=255, null=True, verbose_name='Poste du contact'),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='contact_telephone',
            field=models.CharField(blank=True, help_text='Numéro de téléphone direct du contact', max_length=20, null=True, verbose_name='Téléphone du contact'),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='description',
            field=models.TextField(blank=True, help_text="Informations sur le partenariat et l'historique de la relation", null=True, verbose_name='Description de la relation'),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='nom',
            field=models.CharField(help_text="Nom officiel de l'entreprise ou de l'organisation partenaire", max_length=255, unique=True, verbose_name='Nom du partenaire'),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='secteur_activite',
            field=models.CharField(blank=True, help_text="Domaine d'activité principal du partenaire (ex: Santé, IT, Formation...)", max_length=255, null=True, verbose_name="Secteur d'activité"),
        ),
        migrations.AlterField(
            model_name='partenaire',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='prospection',
            name='commentaire',
            field=models.TextField(blank=True, help_text='Notes et observations sur la prospection', null=True, verbose_name='Commentaires de la prospection'),
        ),
        migrations.AlterField(
            model_name='prospection',
            name='company',
            field=models.ForeignKey(help_text='Entreprise ciblée par cette prospection', on_delete=django.db.models.deletion.CASCADE, related_name='prospections', to='rap_app.company', verbose_name='Entreprise'),
        ),
        migrations.AlterField(
            model_name='prospection',
            name='date_prospection',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Date à laquelle la prospection a été initiée', verbose_name='Date de la prospection'),
        ),
        migrations.AlterField(
            model_name='prospection',
            name='formation',
            field=models.ForeignKey(blank=True, help_text='Formation associée à cette prospection (facultatif)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prospections', to='rap_app.formation', verbose_name='Formation en lien'),
        ),
        migrations.AlterField(
            model_name='prospection',
            name='motif',
            field=models.CharField(choices=[('POEI', 'POEI'), ('apprentissage', 'Apprentissage'), ('VAE', 'VAE'), ('partenariat', 'Établir un partenariat'), ('autre', 'Autre')], default='prise_contact', help_text='Raison principale de cette prospection', max_length=30, verbose_name='Motif de la prospection'),
        ),
        migrations.AlterField(
            model_name='prospection',
            name='objectif',
            field=models.CharField(choices=[('prise_contact', 'Prise de contact'), ('rendez_vous', 'Obtenir un rendez-vous'), ('presentation_offre', 'Présentation d’une offre'), ('contrat', 'Signer un contrat'), ('partenariat', 'Établir un partenariat'), ('autre', 'Autre')], default='prise_contact', help_text='But visé par cette prospection', max_length=30, verbose_name='Objectif de la prospection'),
        ),
        migrations.AlterField(
            model_name='prospection',
            name='responsable',
            field=models.ForeignKey(blank=True, help_text='Personne en charge de cette prospection', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsable de la prospection'),
        ),
        migrations.AlterField(
            model_name='prospection',
            name='statut',
            field=models.CharField(choices=[('a_faire', 'À faire'), ('en_cours', 'En cours'), ('a_relancer', 'À relancer'), ('acceptee', 'Acceptée'), ('refusee', 'Refusée'), ('annulee', 'Annulée'), ('non_renseigne', 'Non renseigné')], default='a_faire', help_text='État actuel de la prospection', max_length=20, verbose_name='Statut de la prospection'),
        ),
        migrations.AlterField(
            model_name='rapport',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='rapport',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='recherche',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='recherche',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='statut',
            name='couleur',
            field=models.CharField(blank=True, help_text='Couleur hexadécimale (#RRGGBB).', max_length=7, verbose_name='Couleur'),
        ),
        migrations.AlterField(
            model_name='statut',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='statut',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AlterField(
            model_name='typeoffre',
            name='autre',
            field=models.CharField(blank=True, help_text="Si vous avez choisi 'Autre', précisez le type d'offre personnalisé", max_length=255, verbose_name='Autre (personnalisé)'),
        ),
        migrations.AlterField(
            model_name='typeoffre',
            name='couleur',
            field=models.CharField(default='#6c757d', help_text="Code couleur hexadécimal (ex: #FF5733) pour l'affichage visuel", max_length=7, verbose_name='Couleur associée (hexadécimal)'),
        ),
        migrations.AlterField(
            model_name='typeoffre',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='typeoffre',
            name='nom',
            field=models.CharField(choices=[('crif', 'CRIF'), ('alternance', 'Alternance'), ('poec', 'POEC'), ('poei', 'POEI'), ('tosa', 'TOSA'), ('autre', 'Autre'), ('non_defini', 'Non défini')], default='non_defini', help_text="Sélectionnez le type d'offre de formation parmi les choix prédéfinis", max_length=100, verbose_name="Type d'offre"),
        ),
        migrations.AlterField(
            model_name='typeoffre',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière mise à jour'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='company_name_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['city'], name='company_city_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['sector_name'], name='company_sector_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['zip_code'], name='company_zipcode_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['formation'], name='rap_app_doc_formati_399b58_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['type_document'], name='rap_app_doc_type_do_ef9a30_idx'),
        ),
        migrations.AddIndex(
            model_name='evenement',
            index=models.Index(fields=['formation'], name='rap_app_eve_formati_3e51e7_idx'),
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['statut'], name='rap_app_for_statut__266c03_idx'),
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['centre'], name='rap_app_for_centre__02fbd4_idx'),
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['statut', 'start_date'], name='rap_app_for_statut__25de1c_idx'),
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['centre', 'statut'], name='rap_app_for_centre__5e5c3c_idx'),
        ),
        migrations.AddIndex(
            model_name='historiqueformation',
            index=models.Index(fields=['formation'], name='rap_app_his_formati_aa2815_idx'),
        ),
        migrations.AddIndex(
            model_name='historiqueformation',
            index=models.Index(fields=['date_modification'], name='rap_app_his_date_mo_a927c1_idx'),
        ),
        migrations.AddIndex(
            model_name='historiqueformation',
            index=models.Index(fields=['modifie_par'], name='rap_app_his_modifie_241c9e_idx'),
        ),
        migrations.AddIndex(
            model_name='historiqueformation',
            index=models.Index(fields=['champ_modifie'], name='rap_app_his_champ_m_84201a_idx'),
        ),
        migrations.AddIndex(
            model_name='historiqueprospection',
            index=models.Index(fields=['prospection'], name='rap_app_his_prospec_f00db9_idx'),
        ),
        migrations.AddIndex(
            model_name='historiqueprospection',
            index=models.Index(fields=['date_modification'], name='rap_app_his_date_mo_5b61b9_idx'),
        ),
        migrations.AddIndex(
            model_name='historiqueprospection',
            index=models.Index(fields=['prochain_contact'], name='rap_app_his_prochai_5f80db_idx'),
        ),
        migrations.AddIndex(
            model_name='partenaire',
            index=models.Index(fields=['secteur_activite'], name='rap_app_par_secteur_455cf4_idx'),
        ),
        migrations.AddIndex(
            model_name='partenaire',
            index=models.Index(fields=['slug'], name='rap_app_par_slug_09691e_idx'),
        ),
        migrations.AddIndex(
            model_name='prospection',
            index=models.Index(fields=['statut'], name='rap_app_pro_statut_84d25a_idx'),
        ),
        migrations.AddIndex(
            model_name='prospection',
            index=models.Index(fields=['date_prospection'], name='rap_app_pro_date_pr_5d71cf_idx'),
        ),
        migrations.AddIndex(
            model_name='prospection',
            index=models.Index(fields=['company'], name='rap_app_pro_company_bb2e93_idx'),
        ),
        migrations.AddIndex(
            model_name='prospection',
            index=models.Index(fields=['formation'], name='rap_app_pro_formati_986a4a_idx'),
        ),
        migrations.AddIndex(
            model_name='prospection',
            index=models.Index(fields=['responsable'], name='rap_app_pro_respons_fb7ec5_idx'),
        ),
        migrations.AddIndex(
            model_name='typeoffre',
            index=models.Index(fields=['nom'], name='rap_app_typ_nom_d4cbe0_idx'),
        ),
        migrations.AddIndex(
            model_name='typeoffre',
            index=models.Index(fields=['autre'], name='rap_app_typ_autre_76e40c_idx'),
        ),
    ]
